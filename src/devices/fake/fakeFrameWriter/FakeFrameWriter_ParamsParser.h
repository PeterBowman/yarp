/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (2.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Thu May 22 22:41:24 2025


#ifndef FAKEFRAMEWRITER_PARAMSPARSER_H
#define FAKEFRAMEWRITER_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class FakeFrameWriter.
*
* These are the used parameters:
* | Group name | Parameter name | Type   | Units | Default Value | Required | Description                   | Notes                                                              |
* |:----------:|:--------------:|:------:|:-----:|:-------------:|:--------:|:-----------------------------:|:------------------------------------------------------------------:|
* | -          | filename       | string | -     | output.avi    | 0        | output file name              | -                                                                  |
* | -          | framerate      | double | -     | 30            | 0        | framerate for the output file | -                                                                  |
* | -          | width          | int    | -     | 0             | 0        | frame width                   | if 0, it will automatically detected from the first received frame |
* | -          | height         | int    | -     | 0             | 0        | frame height                  | if 0, it will automatically detected from the first received frame |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device fakeFrameWriter --filename output.avi --framerate 30 --width 0 --height 0
* \endcode
*
* \code{.unparsed}
* yarpdev --device fakeFrameWriter
* \endcode
*
*/

class FakeFrameWriter_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    FakeFrameWriter_ParamsParser();
    ~FakeFrameWriter_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"FakeFrameWriter"};
    const std::string m_device_name = {"fakeFrameWriter"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 2;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    std::string m_provided_configuration;

    const std::string m_filename_defaultValue = {"output.avi"};
    const std::string m_framerate_defaultValue = {"30"};
    const std::string m_width_defaultValue = {"0"};
    const std::string m_height_defaultValue = {"0"};

    std::string m_filename = {"output.avi"};
    double m_framerate = {30};
    int m_width = {0};
    int m_height = {0};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
    bool getParamValue(const std::string& paramName, std::string& paramValue) const override;
    std::string   getConfiguration() const override;
};

#endif
